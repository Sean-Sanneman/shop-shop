{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/store.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","initialState","products","categories","currentCategory","cart","cartOpen","reducers","state","action","type","product","map","_id","purchaseQuantity","newState","filter","length","createStore","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","ProductItem","item","dispatch","useDispatch","useSelector","image","name","price","quantity","className","to","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","value","onChange","target","role","aria-label","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.38efed1d.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";","import {\r\n    UPDATE_PRODUCTS,\r\n    ADD_TO_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    REMOVE_FROM_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    categories: [],\r\n    currentCategory: '',\r\n    cart: [],\r\n    cartOpen: false\r\n};\r\n\r\nexport const reducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: [...action.products],\r\n            };\r\n\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: [...state.cart, action.product],\r\n            };\r\n\r\n        case ADD_MULTIPLE_TO_CART:\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, ...action.products],\r\n            };\r\n\r\n        case UPDATE_CART_QUANTITY:\r\n            return {\r\n                ...state,\r\n                cartOpen: true,\r\n                cart: state.cart.map(product => {\r\n                    if (action._id === product._id) {\r\n                        product.purchaseQuantity = action.purchaseQuantity\r\n                    }\r\n                    return product\r\n                })\r\n            };\r\n\r\n        case REMOVE_FROM_CART:\r\n            let newState = state.cart.filter(product => {\r\n                return product._id !== action._id;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cartOpen: newState.length > 0,\r\n                cart: newState\r\n            };\r\n\r\n        case CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: false,\r\n                cart: []\r\n            };\r\n\r\n        case TOGGLE_CART:\r\n            return {\r\n                ...state,\r\n                cartOpen: !state.cartOpen\r\n            };\r\n\r\n        case UPDATE_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: [...action.categories],\r\n            };\r\n\r\n        case UPDATE_CURRENT_CATEGORY:\r\n            return {\r\n                ...state,\r\n                currentCategory: action.currentCategory\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nexport default createStore(reducers);","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function (e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function (e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function (e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\n\nfunction ProductList() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n         products: products\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCart = item => {\r\n        dispatch({\r\n            type: REMOVE_FROM_CART,\r\n            _id: item._id\r\n        });\r\n        idbPromise('cart', 'delete', { ...item });\r\n\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const value = e.target.value;\r\n        if (value === '0') {\r\n            dispatch({\r\n                type: REMOVE_FROM_CART,\r\n                _id: item._id\r\n            });\r\n            idbPromise('cart', 'delete', { ...item });\r\n\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: item._id,\r\n                purchaseQuantity: parseInt(value)\r\n            });\r\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-row\">\r\n            <div>\r\n                <img\r\n                    src={`/images/${item.image}`}\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <div>{item.name}, ${item.price}</div>\r\n                <div>\r\n                    <span>Qty:</span>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"1\"\r\n                        value={item.purchaseQuantity}\r\n                        onChange={onChange}\r\n                    />\r\n                    <span\r\n                        role=\"img\"\r\n                        aria-label=\"trash\"\r\n                        onClick={() => removeFromCart(item)}\r\n                    >\r\n                        🗑️\r\n          </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React, { useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLazyQuery } from '@apollo/react-hooks';\r\nimport { QUERY_CHECKOUT } from \"../../utils/queries\"\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport CartItem from \"../CartItem\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\r\nimport \"./style.css\";\r\n\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(state => state);\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session })\r\n      })\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    };\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach(item => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds }\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span\r\n          role=\"img\"\r\n          aria-label=\"trash\">🛒</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map(item => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {\r\n              Auth.loggedIn() ?\r\n                <button onClick={submitCheckout}>\r\n                  Checkout\r\n              </button>\r\n                :\r\n                <span>(log in to check out)</span>\r\n            }\r\n          </div>\r\n        </div>\r\n      ) : (\r\n          <h3>\r\n            <span role=\"img\" aria-label=\"shocked\">\r\n              😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n          </h3>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Cart from \"../components/Cart\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif'\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\n    }\n  }\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button \n              disabled={!cart.find(p => p._id === currentProduct._id)} \n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n\n","import React, { useEffect } from \"react\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { ADD_ORDER } from \"../utils/mutations\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\n\r\nfunction Success() {\r\n    const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n    useEffect(() => {\r\n        async function saveOrder() {\r\n            const cart = await idbPromise('cart', 'get');\r\n            const products = cart.map(item => item._id);\r\n\r\n            if (products.length) {\r\n                const { data } = await addOrder({ variables: { products } });\r\n                const productData = data.addOrder.products;\r\n\r\n                productData.forEach((item) => {\r\n                    idbPromise('cart', 'delete', item);\r\n                });\r\n            }\r\n\r\n            setTimeout(() => {\r\n                window.location.assign('/');\r\n            }, 3000);\r\n        }\r\n\r\n        saveOrder();\r\n    }, [addOrder]);\r\n\r\n    return (\r\n        <div>\r\n            <Jumbotron>\r\n                <h1>Success!</h1>\r\n                <h2>\r\n                    Thank you for your purchase!\r\n        </h2>\r\n                <h2>\r\n                    You will now be redirected to the home page\r\n        </h2>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Success;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\n\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}